<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>com.hitrust.mgear.demo</groupId>
		<artifactId>msecure-graalvm</artifactId>
		<version>5.0.0-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>msecure-native</artifactId>
	<name>msecure-native</name>
	<packaging>pom</packaging>
	<properties>
		<jib.skip>true</jib.skip>
		<native.skip>true</native.skip>
		<springAot>true</springAot>
	</properties>


	<dependencies>
		<dependency>
			<groupId>org.springframework.experimental</groupId>
			<artifactId>spring-native</artifactId>
			<version>0.12.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${springframework.version}</version>
		</dependency>

	</dependencies>
	<build>
		<plugins>

			<plugin>
				<groupId>org.springframework.experimental</groupId>
				<artifactId>spring-aot-maven-plugin</artifactId>
				<version>0.12.1</version>
				<executions>
					<execution>
						<id>generate</id>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
					<execution>
						<id>test-generate</id>
						<goals>
							<goal>test-generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>${jib.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.google.cloud.tools</groupId>
						<artifactId>jib-native-image-extension-maven</artifactId>
						<version>0.1.0</version>
					</dependency>
					<dependency>
						<groupId>com.google.cloud.tools</groupId>
						<artifactId>jib-spring-boot-extension-maven</artifactId>
						<version>0.1.0</version>
					</dependency>
				</dependencies>
				<configuration>
					<container>
						<ports>
							<port>8080</port>
						</ports>
						<mainClass>${jib.mainClass}</mainClass>
					</container>
					<from>
						<image>${jib.from-image}</image>
					</from>
					<to>
						<image>${env.IMAGE_REGISTRY}/${project.groupId}/${project.artifactId}:${project.version}</image>
						<tags>
							<tag>latest</tag>
						</tags>
						<auth>
							<username>${env.IMAGE_REGISTRY_USER}</username>
							<password>${env.IMAGE_REGISTRY_MEMA}</password>
						</auth>
					</to>
					<allowInsecureRegistries>true</allowInsecureRegistries>
					<pluginExtensions>
						<pluginExtension>
							<implementation>com.google.cloud.tools.jib.maven.extension.nativeimage.JibNativeImageExtension</implementation>
							<properties>
								<!-- Normally you won't need to set this. Let us know if the extension
               fails to auto-detect the binary name. -->
								<imageName>${project.artifactId}</imageName>
							</properties>
						</pluginExtension>
						<pluginExtension>
							<implementation>com.google.cloud.tools.jib.maven.extension.springboot.JibSpringBootExtension</implementation>
						</pluginExtension>
					</pluginExtensions>
				</configuration>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.graalvm.buildtools</groupId>
				<artifactId>native-maven-plugin</artifactId>
				<version>${native.maven.plugin.version}</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>build-native</id>
						<goals>
							<goal>build</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
				<configuration>
					<skip>${native.skip}</skip>
					<useArgFile>false</useArgFile>
					<imageName>${project.artifactId}</imageName>
					<buildArgs>
						<buildArg>-H:IncludeResources=META-INF/spring.factories|org/springframework/boot/logging/.*</buildArg>
						<buildArg>-H:ReflectionConfigurationFiles=${project.basedir}/app.json</buildArg>
					</buildArgs>
					<classpath>
						<param>${maven.classpath}</param>
						<param>${project.build.directory}/classes</param>
						<param>${project.build.directory}/${project.artifactId}-${project.version}.jar</param>
					</classpath>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>define-classpath</id>
						<phase>process-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<exportAntProperties>true</exportAntProperties>
							<target>
								<property name="maven.classpath" refid="maven.runtime.classpath" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<configuration>
<!--					<classifier>exec</classifier>-->
					<mainClass>${jib.mainClass}</mainClass>
				</configuration>
				
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				
			</plugin>
		</plugins>
	</build>
	<modules>
		<module>msecure-native-consumer</module>
		<module>msecure-native-webflux</module>
		<!--
		<module>msecure-native-asym</module>
		<module>msecure-native-hsm</module>
		-->
	</modules>
</project>